Practical Example:
	Suppose we have developed Amazon, now we have geographic distribution of instances.
	
	When a user comes, the load balancer will assign a machine to that user and he will be able to add items to cart.
	
	After few days, the user comes and is assigned to a different machine, and the cart is empty.(Big Loss)

State-full:
	When we are trying to store the information about a user.

	In the above example using sticky load balancing will solve the problem, and user will have it's cart data saved.

	Advantages:
		1. Customize Flow:
			It allows us to give better user experience.

	Challenges:
		1. Failure recovery expensive & slow.
		2. Scaling becomes tough.

		Ex:
			Suppose we have a security guard with high memory and recognizes the society car.
			
			If he leaves, the new guard might not be that intelligent, also new register might be required.
			
			There are not many people as smart as the guard.			

Stateless:
	Every time the user calls the system, the system will have no info about the user.

	In the above example we could use persistent storage such as a database, along with caching to avoid redundant calls.

	Advantages:
		1. Scalable System.
		2. Fast Failure Recovery.
